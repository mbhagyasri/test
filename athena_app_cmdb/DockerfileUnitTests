# pull official base image
FROM artifactory.cdk.com/dockerhub/python:3.9.5-alpine3.13

# set environment varibles
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1
ENV DJANGO_SETTINGS_MODULE=app_registry.settings.test

# Copy your application code to the container (make sure you create a .dockerignore file if any large files or directories should be excluded)
RUN mkdir -p /opt/athena_app_cmdb/config /opt/athena_app_cmdb/etc
WORKDIR /opt/athena_app_cmdb

ARG requirements=requirements/dev.txt

# Copy in your requirements file
COPY requirements/ /opt/athena_app_cmdb/requirements/
# Installing client libraries and any other package you need
# These are packages that are needed during runtime
RUN apk add --update --no-cache python3 libpq bash expat-dev libffi curl py-pip ca-certificates postgresql-client \
                                graphviz ttf-freefont
# Install build deps, then run `pip install`, then remove unneeded build deps all in a single step. Correct the path to your production requirements file, if needed.
RUN set -ex \
    && apk add --update --no-cache --virtual .build-deps \
            gcc \
            make \
            libc-dev \
            musl-dev \
            linux-headers \
            pcre-dev \
            postgresql-client \
            python3-dev \
            build-base \
            postgresql-dev \
            libffi-dev \
            openssl-dev \
            cargo \
            openldap-dev \
            graphviz-dev \
    && pip install -U pip \
    && pip install --no-cache-dir -r $requirements \
    && runDeps="$( \
            scanelf --needed --nobanner --recursive /venv \
                    | awk '{ gsub(/,/, "\nso:", $2); print "so:" $2 }' \
                    | sort -u \
                    | xargs -r apk info --installed \
                    | sort -u \
    )" \
    && apk add --virtual .python-rundeps $runDeps 
    # && apk del .build-deps
# copy project source code
COPY . /opt/athena_app_cmdb/

# generate ERD file
RUN export SECRET_KEY='SECRET_KEY' && /usr/local/bin/python manage.py graph_models athena_app_cmdb -g --pygraphviz -o  \
    athena_app_cmdb/static/img/athena_app_cmdb_erd.png

ENV SECRET_KEY='SECRET_KEY'

RUN python manage.py makemigrations athena_app_cmdb\
    && python manage.py migrate athena_app_cmdb \
    && python manage.py migrate \
    && python manage.py test athena_app_cmdb.test